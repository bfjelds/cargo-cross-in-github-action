name: Build Foo

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types:
      - published

env:
  DOCKERFILE: ./build/containers/Dockerfile.foo
  ACR_NAME: myacr
  COMPONENT_NAME: foo
  MAKEFILE_COMPONENT: foo

jobs:

  per-arch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - arm64v8
          # - arm32v7
          - amd64
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Create /github/workspace link for Docker-in-Docker references
      run: |
        sudo mkdir /github
        sudo ln -s $PWD /github/workspace
    - name: Run Per-Arch component build for ${{ env.COMPONENT_NAME }}
      uses: ./.github/actions/build-component-per-arch
      with:
        github_event_name: ${{ github.event_name }}
        github_ref: ${{ github.ref }}
        github_event_action: ${{ github.event.action }}
        github_merged: ${{ github.event.pull_request.merged }}
        dockerfile: ${{ env.DOCKERFILE }}
        container_name: ${{ env.COMPONENT_NAME }}
        acr_repo: ${{ env.ACR_NAME }}.azurecr.io
        acr_name: ${{ env.ACR_NAME }}
        acr_password: ${{ secrets.acrPassword }}
        makefile_component_name: ${{ env.MAKEFILE_COMPONENT }}
        platform: ${{ matrix.arch }}
        build_rust: "1"

  multi-arch:
    if: (github.event_name == 'release') || (github.event_name == 'push' && github.ref == 'refs/heads/master') || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.ref != 'refs/heads/master')
    needs: per-arch
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Run Multi-Arch component build for ${{ env.COMPONENT_NAME }}
      uses: ./.github/actions/build-component-per-arch
      with:
        github_event_name: ${{ github.event_name }}
        container_name: ${{ env.COMPONENT_NAME }}
        acr_repo: ${{ env.ACR_NAME }}.azurecr.io
        acr_name: ${{ env.ACR_NAME }}
        acr_password: ${{ secrets.acrPassword }}
        makefile_component_name: ${{ env.MAKEFILE_COMPONENT }}
